<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>

    <!--https://docs.microsoft.com/en-us/dotnet/core/tools/csproj#nuget-metadata-properties-->
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PackageId>SR.EmberPlusConsumerLib.NetStandard</PackageId>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <ContentTargetFolders>content</ContentTargetFolders>

    <GenerateNuspecDependsOn>MyCustomizePacking</GenerateNuspecDependsOn>
    <Description>C# .NET Standard consumer library for the EmBER+ protocol.</Description>
    <Company>Sveriges Radio AB</Company>
    <Product>SR.EmberPlusConsumerLib.NetStandard</Product>
    <Authors>Sveriges Radio AB</Authors>
    <Version>0.0.1</Version>
    <Configurations>Debug;Release;PackNuGet</Configurations>
    <RepositoryUrl>https://github.com/sverigesradio/nuget-ember-plus-consumer-lib</RepositoryUrl>
    <RepositoryType>git</RepositoryType>

    <!--This Boolean value specifies whether the build output assemblies should be packed into the .nupkg file or not.-->
    <!--<IncludeBuildOutput></IncludeBuildOutput>-->

    <!--This Boolean value specifies whether any items that have a type of Content will be included in the resulting package automatically. The default is true.-->
    <!--<IncludeContentInPack></IncludeContentInPack>-->

    <!--This Boolean value indicates whether the pack process should create a source package. -->
    <!--The source package contains the library's source code as well as PDB files. -->
    <!--Source files are put under the src/ProjectName directory in the resulting package file.-->
    <!--<IncludeSource>true</IncludeSource>-->

    <!--This Boolean value indicates whether the package should create an additional symbols package when the project is packed.--> 
    <!--The symbols package's format is controlled by the SymbolPackageFormat property.-->
    <!--<IncludeSymbols></IncludeSymbols>-->

    <!--Specifies the format of the symbols package. If "symbols.nupkg", a legacy symbols package -->
    <!--will be created with a .symbols.nupkg extension containing PDBs, DLLs, and other output files. -->
    <!--If "snupkg", a snupkg symbol package will be created containing the portable PDBs. Default is "symbols.nupkg"-->
    <!--<SymbolPackageFormat></SymbolPackageFormat>-->

    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

    <NoWarn>CA2007;CA1307;CA1031;CS3021</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Lawo.EmberPlusSharp\Lawo.EmberPlusSharp.csproj">
      <Pack>true</Pack>
      <Private>true</Private>
      <IncludeAssets>true</IncludeAssets>
    </ProjectReference>
    <ProjectReference Include="..\Lawo\Lawo.csproj">  
      <Pack>true</Pack>
      <Private>true</Private>
      <IncludeAssets>true</IncludeAssets>
    </ProjectReference>
    <!--<Content Include="$(OutDir)\*.dll">
      <PackagePath>lib\$(TargetFramework)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(OutDir)\*.pdb">
      <PackagePath>lib\$(TargetFramework)</PackagePath>
      <Pack>true</Pack>
    </Content>-->
  </ItemGroup>

  <Target Name="MyCustomizePacking" Returns="@(NuGetPackInput);@(_BuildOutputInPackage);@(_TargetPathsToSymbols)">
    <ItemGroup>
      <NuGetPackInput Remove="@(BuiltProjectOutputGroupKeyOutput);@(DebugSymbolsProjectOutputGroupOutput)" />
      <_BuildOutputInPackage Remove="@(BuiltProjectOutputGroupKeyOutput)" />
      <_TargetPathsToSymbols Remove="@(DebugSymbolsProjectOutputGroupOutput)" />

      <NuGetPackInput Include="@(ReferenceCopyLocalPaths);@(AllItemsFullPathWithTargetPath)" />
      <_BuildOutputInPackage Include="%(ReferenceCopyLocalPaths.Identity)">
        <TargetFramework>$(TargetFramework)</TargetFramework>
      </_BuildOutputInPackage>
      <_BuildOutputInPackage Include="%(AllItemsFullPathWithTargetPath.Identity)">
        <TargetFramework>$(TargetFramework)</TargetFramework>
      </_BuildOutputInPackage>
    </ItemGroup>
  </Target>

</Project>
